name: Check Turing.jl Version

on:
  pull_request:
    paths: ['_quarto.yml']
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract minor version from _quarto.yml
        id: extract_minor_version
        run: |
          minor_version=$(grep -oP 'text:\s+"v\K\d+\.\d+' _quarto.yml)
          echo "MINOR_VERSION=$minor_version" >> $GITHUB_OUTPUT

      - name: Fetch latest Turing.jl version
        id: fetch_latest_bugfix
        run: |
          latest=$(curl --silent "https://api.github.com/repos/TuringLang/Turing.jl/releases/latest" | jq -r .tag_name)
          latest_minor=$(echo $latest | grep -oP '\d+\.\d+')
          echo "LATEST=$latest" >> $GITHUB_OUTPUT
          echo "LATEST_MINOR=$latest_minor" >> $GITHUB_OUTPUT

      - name: Update _quarto.yml if outdated
        run: |
          minor_version=${{ steps.extract_minor_version.outputs.MINOR_VERSION }}
          latest_minor=${{ steps.fetch_latest_bugfix.outputs.LATEST_MINOR }}
          latest_version=${{ steps.fetch_latest_bugfix.outputs.LATEST }}
          if [ "$minor_version" != "$latest_minor" ]; then
            sed -i "s/text: \"v$minor_version\"/text: \"v$latest_minor\"/" _quarto.yml
            echo "Updated _quarto.yml to latest minor version: v$latest_minor"
          fi

      - name: Suggest changes if _quarto.yml is outdated
        if: ${{ steps.extract_minor_version.outputs.MINOR_VERSION }} != ${{ steps.fetch_latest_bugfix.outputs.LATEST_MINOR }}
        uses: parkerbxyz/suggest-changes@v1
        with:
          comment: 'The version in _quarto.yml was outdated and has been updated to the latest minor version: v${{ steps.fetch_latest_bugfix.outputs.LATEST_MINOR }}.'
