name: Render Docs Website

on:
  push:
    branches:
      - master
  workflow_dispatch: # manual trigger for testing

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: pre-release

      - name: Restore cached _freeze folder
        id: cache-primes-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            _freeze/
          key: ${{ runner.os }}-primes-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-primes

      - name: Render Quarto site
        run: quarto render

      - name: Rename original search index
        run: mv _site/search.json _site/search_original.json

      - name: Save _freeze folder
        id: cache-primes-save
        uses: actions/cache/save@v4
        with:
          path: |
            _freeze/
          key: ${{ runner.os }}-primes-${{ github.run_id }}

      - name: Install jq
        run: sudo apt-get install jq

      - name: Fetch search_original.json from main site
        run: curl -O https://raw.githubusercontent.com/TuringLang/turinglang.github.io/gh-pages/search_original.json

      - name: Convert main site search index URLs to relative URLs
        run: |
          jq 'map(
                if .href then .href = "../" + .href else . end |
                if .objectID then .objectID = "../" + .objectID else . end)' search_original.json > fixed_main_search.json

      - name: Merge both search index
        run: |
          jq -s '.[0] + .[1]' _site/search_original.json fixed_main_search.json > _site/search.json


      - name: Check VERSION file
        id: check_version
        run: |
          # Get the current version from the VERSION file
          current_version=$(cat VERSION)
          # Fetch the latest Turing.jl release tag
          latest_tag=$(curl --silent "https://api.github.com/repos/TuringLang/Turing.jl/releases/latest" | jq -r .tag_name)
          # Compare the current version with the latest tag
          if [ "$current_version" != "$latest_tag" ]; then
            echo "Version mismatch. Please update the VERSION file to $latest_tag."
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV
            echo "version_mismatch=true" >> $GITHUB_OUTPUT
          else
            echo "Version is up-to-date."
            echo "version_mismatch=false" >> $GITHUB_OUTPUT
          fi

      - name: Suggest changes if version mismatch
        if: steps.check_version.outputs.version_mismatch == 'true'
        uses: parkerbxyz/suggest-changes@v1
        with:
          comment: 'Please update the VERSION file to match the latest Turing.jl release: ${{ env.latest_tag }}.'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy versioned docs
        if: steps.check_version.outputs.version_mismatch == 'false'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          target-folder: versions/${{ env.latest_tag }}
          clean: false

      - name: Deploy latest docs to root
        if: steps.check_version.outputs.version_mismatch == 'false'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          clean: false